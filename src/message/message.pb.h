// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#ifndef PROTOBUF_INCLUDED_message_2eproto
#define PROTOBUF_INCLUDED_message_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_message_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[5]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_message_2eproto();
namespace rpscc {
class Message;
class MessageDefaultTypeInternal;
extern MessageDefaultTypeInternal _Message_default_instance_;
class Message_ConfigMessage;
class Message_ConfigMessageDefaultTypeInternal;
extern Message_ConfigMessageDefaultTypeInternal _Message_ConfigMessage_default_instance_;
class Message_HeartbeatMessage;
class Message_HeartbeatMessageDefaultTypeInternal;
extern Message_HeartbeatMessageDefaultTypeInternal _Message_HeartbeatMessage_default_instance_;
class Message_RegisterMessage;
class Message_RegisterMessageDefaultTypeInternal;
extern Message_RegisterMessageDefaultTypeInternal _Message_RegisterMessage_default_instance_;
class Message_RequestMessage;
class Message_RequestMessageDefaultTypeInternal;
extern Message_RequestMessageDefaultTypeInternal _Message_RequestMessage_default_instance_;
}  // namespace rpscc
namespace google {
namespace protobuf {
template<> ::rpscc::Message* Arena::CreateMaybeMessage<::rpscc::Message>(Arena*);
template<> ::rpscc::Message_ConfigMessage* Arena::CreateMaybeMessage<::rpscc::Message_ConfigMessage>(Arena*);
template<> ::rpscc::Message_HeartbeatMessage* Arena::CreateMaybeMessage<::rpscc::Message_HeartbeatMessage>(Arena*);
template<> ::rpscc::Message_RegisterMessage* Arena::CreateMaybeMessage<::rpscc::Message_RegisterMessage>(Arena*);
template<> ::rpscc::Message_RequestMessage* Arena::CreateMaybeMessage<::rpscc::Message_RequestMessage>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace rpscc {

enum Message_RequestMessage_RequestType {
  Message_RequestMessage_RequestType_key_value = 0,
  Message_RequestMessage_RequestType_key = 1,
  Message_RequestMessage_RequestType_ack = 2,
  Message_RequestMessage_RequestType_block = 3,
  Message_RequestMessage_RequestType_Message_RequestMessage_RequestType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Message_RequestMessage_RequestType_Message_RequestMessage_RequestType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Message_RequestMessage_RequestType_IsValid(int value);
const Message_RequestMessage_RequestType Message_RequestMessage_RequestType_RequestType_MIN = Message_RequestMessage_RequestType_key_value;
const Message_RequestMessage_RequestType Message_RequestMessage_RequestType_RequestType_MAX = Message_RequestMessage_RequestType_block;
const int Message_RequestMessage_RequestType_RequestType_ARRAYSIZE = Message_RequestMessage_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_RequestMessage_RequestType_descriptor();
inline const ::std::string& Message_RequestMessage_RequestType_Name(Message_RequestMessage_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_RequestMessage_RequestType_descriptor(), value);
}
inline bool Message_RequestMessage_RequestType_Parse(
    const ::std::string& name, Message_RequestMessage_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_RequestMessage_RequestType>(
    Message_RequestMessage_RequestType_descriptor(), name, value);
}
enum Message_MessageType {
  Message_MessageType_config = 0,
  Message_MessageType_request = 1,
  Message_MessageType_heartbeat = 2,
  Message_MessageType_register_ = 3,
  Message_MessageType_terminate = 4,
  Message_MessageType_Message_MessageType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  Message_MessageType_Message_MessageType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool Message_MessageType_IsValid(int value);
const Message_MessageType Message_MessageType_MessageType_MIN = Message_MessageType_config;
const Message_MessageType Message_MessageType_MessageType_MAX = Message_MessageType_terminate;
const int Message_MessageType_MessageType_ARRAYSIZE = Message_MessageType_MessageType_MAX + 1;

const ::google::protobuf::EnumDescriptor* Message_MessageType_descriptor();
inline const ::std::string& Message_MessageType_Name(Message_MessageType value) {
  return ::google::protobuf::internal::NameOfEnum(
    Message_MessageType_descriptor(), value);
}
inline bool Message_MessageType_Parse(
    const ::std::string& name, Message_MessageType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Message_MessageType>(
    Message_MessageType_descriptor(), name, value);
}
// ===================================================================

class Message_RequestMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpscc.Message.RequestMessage) */ {
 public:
  Message_RequestMessage();
  virtual ~Message_RequestMessage();

  Message_RequestMessage(const Message_RequestMessage& from);

  inline Message_RequestMessage& operator=(const Message_RequestMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_RequestMessage(Message_RequestMessage&& from) noexcept
    : Message_RequestMessage() {
    *this = ::std::move(from);
  }

  inline Message_RequestMessage& operator=(Message_RequestMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message_RequestMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_RequestMessage* internal_default_instance() {
    return reinterpret_cast<const Message_RequestMessage*>(
               &_Message_RequestMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Message_RequestMessage* other);
  friend void swap(Message_RequestMessage& a, Message_RequestMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_RequestMessage* New() const final {
    return CreateMaybeMessage<Message_RequestMessage>(nullptr);
  }

  Message_RequestMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message_RequestMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message_RequestMessage& from);
  void MergeFrom(const Message_RequestMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_RequestMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Message_RequestMessage_RequestType RequestType;
  static const RequestType key_value =
    Message_RequestMessage_RequestType_key_value;
  static const RequestType key =
    Message_RequestMessage_RequestType_key;
  static const RequestType ack =
    Message_RequestMessage_RequestType_ack;
  static const RequestType block =
    Message_RequestMessage_RequestType_block;
  static inline bool RequestType_IsValid(int value) {
    return Message_RequestMessage_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    Message_RequestMessage_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    Message_RequestMessage_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    Message_RequestMessage_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return Message_RequestMessage_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return Message_RequestMessage_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return Message_RequestMessage_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // repeated int32 keys = 2;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 2;
  ::google::protobuf::int32 keys(int index) const;
  void set_keys(int index, ::google::protobuf::int32 value);
  void add_keys(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      keys() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_keys();

  // repeated float values = 3;
  int values_size() const;
  void clear_values();
  static const int kValuesFieldNumber = 3;
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::google::protobuf::RepeatedField< float >&
      values() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_values();

  // .rpscc.Message.RequestMessage.RequestType request_type = 1;
  void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  ::rpscc::Message_RequestMessage_RequestType request_type() const;
  void set_request_type(::rpscc::Message_RequestMessage_RequestType value);

  // @@protoc_insertion_point(class_scope:rpscc.Message.RequestMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > keys_;
  mutable std::atomic<int> _keys_cached_byte_size_;
  ::google::protobuf::RepeatedField< float > values_;
  mutable std::atomic<int> _values_cached_byte_size_;
  int request_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Message_ConfigMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpscc.Message.ConfigMessage) */ {
 public:
  Message_ConfigMessage();
  virtual ~Message_ConfigMessage();

  Message_ConfigMessage(const Message_ConfigMessage& from);

  inline Message_ConfigMessage& operator=(const Message_ConfigMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_ConfigMessage(Message_ConfigMessage&& from) noexcept
    : Message_ConfigMessage() {
    *this = ::std::move(from);
  }

  inline Message_ConfigMessage& operator=(Message_ConfigMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message_ConfigMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_ConfigMessage* internal_default_instance() {
    return reinterpret_cast<const Message_ConfigMessage*>(
               &_Message_ConfigMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(Message_ConfigMessage* other);
  friend void swap(Message_ConfigMessage& a, Message_ConfigMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_ConfigMessage* New() const final {
    return CreateMaybeMessage<Message_ConfigMessage>(nullptr);
  }

  Message_ConfigMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message_ConfigMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message_ConfigMessage& from);
  void MergeFrom(const Message_ConfigMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_ConfigMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string node_ip_port = 4;
  int node_ip_port_size() const;
  void clear_node_ip_port();
  static const int kNodeIpPortFieldNumber = 4;
  const ::std::string& node_ip_port(int index) const;
  ::std::string* mutable_node_ip_port(int index);
  void set_node_ip_port(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_node_ip_port(int index, ::std::string&& value);
  #endif
  void set_node_ip_port(int index, const char* value);
  void set_node_ip_port(int index, const char* value, size_t size);
  ::std::string* add_node_ip_port();
  void add_node_ip_port(const ::std::string& value);
  #if LANG_CXX11
  void add_node_ip_port(::std::string&& value);
  #endif
  void add_node_ip_port(const char* value);
  void add_node_ip_port(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField<::std::string>& node_ip_port() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* mutable_node_ip_port();

  // repeated int32 partition = 5;
  int partition_size() const;
  void clear_partition();
  static const int kPartitionFieldNumber = 5;
  ::google::protobuf::int32 partition(int index) const;
  void set_partition(int index, ::google::protobuf::int32 value);
  void add_partition(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      partition() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_partition();

  // repeated int32 server_id = 6;
  int server_id_size() const;
  void clear_server_id();
  static const int kServerIdFieldNumber = 6;
  ::google::protobuf::int32 server_id(int index) const;
  void set_server_id(int index, ::google::protobuf::int32 value);
  void add_server_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      server_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_server_id();

  // repeated int32 worker_id = 8;
  int worker_id_size() const;
  void clear_worker_id();
  static const int kWorkerIdFieldNumber = 8;
  ::google::protobuf::int32 worker_id(int index) const;
  void set_worker_id(int index, ::google::protobuf::int32 value);
  void add_worker_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      worker_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_worker_id();

  // repeated int32 master_id = 9;
  int master_id_size() const;
  void clear_master_id();
  static const int kMasterIdFieldNumber = 9;
  ::google::protobuf::int32 master_id(int index) const;
  void set_master_id(int index, ::google::protobuf::int32 value);
  void add_master_id(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      master_id() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_master_id();

  // int32 worker_num = 1;
  void clear_worker_num();
  static const int kWorkerNumFieldNumber = 1;
  ::google::protobuf::int32 worker_num() const;
  void set_worker_num(::google::protobuf::int32 value);

  // int32 server_num = 2;
  void clear_server_num();
  static const int kServerNumFieldNumber = 2;
  ::google::protobuf::int32 server_num() const;
  void set_server_num(::google::protobuf::int32 value);

  // int32 key_range = 3;
  void clear_key_range();
  static const int kKeyRangeFieldNumber = 3;
  ::google::protobuf::int32 key_range() const;
  void set_key_range(::google::protobuf::int32 value);

  // int32 bound = 7;
  void clear_bound();
  static const int kBoundFieldNumber = 7;
  ::google::protobuf::int32 bound() const;
  void set_bound(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpscc.Message.ConfigMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField<::std::string> node_ip_port_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > partition_;
  mutable std::atomic<int> _partition_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > server_id_;
  mutable std::atomic<int> _server_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > worker_id_;
  mutable std::atomic<int> _worker_id_cached_byte_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > master_id_;
  mutable std::atomic<int> _master_id_cached_byte_size_;
  ::google::protobuf::int32 worker_num_;
  ::google::protobuf::int32 server_num_;
  ::google::protobuf::int32 key_range_;
  ::google::protobuf::int32 bound_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Message_RegisterMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpscc.Message.RegisterMessage) */ {
 public:
  Message_RegisterMessage();
  virtual ~Message_RegisterMessage();

  Message_RegisterMessage(const Message_RegisterMessage& from);

  inline Message_RegisterMessage& operator=(const Message_RegisterMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_RegisterMessage(Message_RegisterMessage&& from) noexcept
    : Message_RegisterMessage() {
    *this = ::std::move(from);
  }

  inline Message_RegisterMessage& operator=(Message_RegisterMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message_RegisterMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_RegisterMessage* internal_default_instance() {
    return reinterpret_cast<const Message_RegisterMessage*>(
               &_Message_RegisterMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(Message_RegisterMessage* other);
  friend void swap(Message_RegisterMessage& a, Message_RegisterMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_RegisterMessage* New() const final {
    return CreateMaybeMessage<Message_RegisterMessage>(nullptr);
  }

  Message_RegisterMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message_RegisterMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message_RegisterMessage& from);
  void MergeFrom(const Message_RegisterMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_RegisterMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const char* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // int32 port = 2;
  void clear_port();
  static const int kPortFieldNumber = 2;
  ::google::protobuf::int32 port() const;
  void set_port(::google::protobuf::int32 value);

  // bool is_server = 3;
  void clear_is_server();
  static const int kIsServerFieldNumber = 3;
  bool is_server() const;
  void set_is_server(bool value);

  // @@protoc_insertion_point(class_scope:rpscc.Message.RegisterMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::int32 port_;
  bool is_server_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Message_HeartbeatMessage final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpscc.Message.HeartbeatMessage) */ {
 public:
  Message_HeartbeatMessage();
  virtual ~Message_HeartbeatMessage();

  Message_HeartbeatMessage(const Message_HeartbeatMessage& from);

  inline Message_HeartbeatMessage& operator=(const Message_HeartbeatMessage& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message_HeartbeatMessage(Message_HeartbeatMessage&& from) noexcept
    : Message_HeartbeatMessage() {
    *this = ::std::move(from);
  }

  inline Message_HeartbeatMessage& operator=(Message_HeartbeatMessage&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message_HeartbeatMessage& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message_HeartbeatMessage* internal_default_instance() {
    return reinterpret_cast<const Message_HeartbeatMessage*>(
               &_Message_HeartbeatMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(Message_HeartbeatMessage* other);
  friend void swap(Message_HeartbeatMessage& a, Message_HeartbeatMessage& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message_HeartbeatMessage* New() const final {
    return CreateMaybeMessage<Message_HeartbeatMessage>(nullptr);
  }

  Message_HeartbeatMessage* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message_HeartbeatMessage>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message_HeartbeatMessage& from);
  void MergeFrom(const Message_HeartbeatMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message_HeartbeatMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bool is_live = 1;
  void clear_is_live();
  static const int kIsLiveFieldNumber = 1;
  bool is_live() const;
  void set_is_live(bool value);

  // int32 agent_epoch_num = 2;
  void clear_agent_epoch_num();
  static const int kAgentEpochNumFieldNumber = 2;
  ::google::protobuf::int32 agent_epoch_num() const;
  void set_agent_epoch_num(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:rpscc.Message.HeartbeatMessage)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  bool is_live_;
  ::google::protobuf::int32 agent_epoch_num_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// -------------------------------------------------------------------

class Message final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:rpscc.Message) */ {
 public:
  Message();
  virtual ~Message();

  Message(const Message& from);

  inline Message& operator=(const Message& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Message(Message&& from) noexcept
    : Message() {
    *this = ::std::move(from);
  }

  inline Message& operator=(Message&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const Message& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Message* internal_default_instance() {
    return reinterpret_cast<const Message*>(
               &_Message_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(Message* other);
  friend void swap(Message& a, Message& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Message* New() const final {
    return CreateMaybeMessage<Message>(nullptr);
  }

  Message* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Message>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Message& from);
  void MergeFrom(const Message& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Message* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef Message_RequestMessage RequestMessage;
  typedef Message_ConfigMessage ConfigMessage;
  typedef Message_RegisterMessage RegisterMessage;
  typedef Message_HeartbeatMessage HeartbeatMessage;

  typedef Message_MessageType MessageType;
  static const MessageType config =
    Message_MessageType_config;
  static const MessageType request =
    Message_MessageType_request;
  static const MessageType heartbeat =
    Message_MessageType_heartbeat;
  static const MessageType register_ =
    Message_MessageType_register_;
  static const MessageType terminate =
    Message_MessageType_terminate;
  static inline bool MessageType_IsValid(int value) {
    return Message_MessageType_IsValid(value);
  }
  static const MessageType MessageType_MIN =
    Message_MessageType_MessageType_MIN;
  static const MessageType MessageType_MAX =
    Message_MessageType_MessageType_MAX;
  static const int MessageType_ARRAYSIZE =
    Message_MessageType_MessageType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  MessageType_descriptor() {
    return Message_MessageType_descriptor();
  }
  static inline const ::std::string& MessageType_Name(MessageType value) {
    return Message_MessageType_Name(value);
  }
  static inline bool MessageType_Parse(const ::std::string& name,
      MessageType* value) {
    return Message_MessageType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .rpscc.Message.ConfigMessage config_msg = 4;
  bool has_config_msg() const;
  void clear_config_msg();
  static const int kConfigMsgFieldNumber = 4;
  const ::rpscc::Message_ConfigMessage& config_msg() const;
  ::rpscc::Message_ConfigMessage* release_config_msg();
  ::rpscc::Message_ConfigMessage* mutable_config_msg();
  void set_allocated_config_msg(::rpscc::Message_ConfigMessage* config_msg);

  // .rpscc.Message.RequestMessage request_msg = 5;
  bool has_request_msg() const;
  void clear_request_msg();
  static const int kRequestMsgFieldNumber = 5;
  const ::rpscc::Message_RequestMessage& request_msg() const;
  ::rpscc::Message_RequestMessage* release_request_msg();
  ::rpscc::Message_RequestMessage* mutable_request_msg();
  void set_allocated_request_msg(::rpscc::Message_RequestMessage* request_msg);

  // .rpscc.Message.HeartbeatMessage heartbeat_msg = 6;
  bool has_heartbeat_msg() const;
  void clear_heartbeat_msg();
  static const int kHeartbeatMsgFieldNumber = 6;
  const ::rpscc::Message_HeartbeatMessage& heartbeat_msg() const;
  ::rpscc::Message_HeartbeatMessage* release_heartbeat_msg();
  ::rpscc::Message_HeartbeatMessage* mutable_heartbeat_msg();
  void set_allocated_heartbeat_msg(::rpscc::Message_HeartbeatMessage* heartbeat_msg);

  // .rpscc.Message.RegisterMessage register_msg = 7;
  bool has_register_msg() const;
  void clear_register_msg();
  static const int kRegisterMsgFieldNumber = 7;
  const ::rpscc::Message_RegisterMessage& register_msg() const;
  ::rpscc::Message_RegisterMessage* release_register_msg();
  ::rpscc::Message_RegisterMessage* mutable_register_msg();
  void set_allocated_register_msg(::rpscc::Message_RegisterMessage* register_msg);

  // int32 send_id = 1;
  void clear_send_id();
  static const int kSendIdFieldNumber = 1;
  ::google::protobuf::int32 send_id() const;
  void set_send_id(::google::protobuf::int32 value);

  // int32 recv_id = 2;
  void clear_recv_id();
  static const int kRecvIdFieldNumber = 2;
  ::google::protobuf::int32 recv_id() const;
  void set_recv_id(::google::protobuf::int32 value);

  // .rpscc.Message.MessageType message_type = 3;
  void clear_message_type();
  static const int kMessageTypeFieldNumber = 3;
  ::rpscc::Message_MessageType message_type() const;
  void set_message_type(::rpscc::Message_MessageType value);

  // @@protoc_insertion_point(class_scope:rpscc.Message)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::rpscc::Message_ConfigMessage* config_msg_;
  ::rpscc::Message_RequestMessage* request_msg_;
  ::rpscc::Message_HeartbeatMessage* heartbeat_msg_;
  ::rpscc::Message_RegisterMessage* register_msg_;
  ::google::protobuf::int32 send_id_;
  ::google::protobuf::int32 recv_id_;
  int message_type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Message_RequestMessage

// .rpscc.Message.RequestMessage.RequestType request_type = 1;
inline void Message_RequestMessage::clear_request_type() {
  request_type_ = 0;
}
inline ::rpscc::Message_RequestMessage_RequestType Message_RequestMessage::request_type() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RequestMessage.request_type)
  return static_cast< ::rpscc::Message_RequestMessage_RequestType >(request_type_);
}
inline void Message_RequestMessage::set_request_type(::rpscc::Message_RequestMessage_RequestType value) {
  
  request_type_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.RequestMessage.request_type)
}

// repeated int32 keys = 2;
inline int Message_RequestMessage::keys_size() const {
  return keys_.size();
}
inline void Message_RequestMessage::clear_keys() {
  keys_.Clear();
}
inline ::google::protobuf::int32 Message_RequestMessage::keys(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RequestMessage.keys)
  return keys_.Get(index);
}
inline void Message_RequestMessage::set_keys(int index, ::google::protobuf::int32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.RequestMessage.keys)
}
inline void Message_RequestMessage::add_keys(::google::protobuf::int32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.RequestMessage.keys)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message_RequestMessage::keys() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.RequestMessage.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message_RequestMessage::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.RequestMessage.keys)
  return &keys_;
}

// repeated float values = 3;
inline int Message_RequestMessage::values_size() const {
  return values_.size();
}
inline void Message_RequestMessage::clear_values() {
  values_.Clear();
}
inline float Message_RequestMessage::values(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RequestMessage.values)
  return values_.Get(index);
}
inline void Message_RequestMessage::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.RequestMessage.values)
}
inline void Message_RequestMessage::add_values(float value) {
  values_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.RequestMessage.values)
}
inline const ::google::protobuf::RepeatedField< float >&
Message_RequestMessage::values() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.RequestMessage.values)
  return values_;
}
inline ::google::protobuf::RepeatedField< float >*
Message_RequestMessage::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.RequestMessage.values)
  return &values_;
}

// -------------------------------------------------------------------

// Message_ConfigMessage

// int32 worker_num = 1;
inline void Message_ConfigMessage::clear_worker_num() {
  worker_num_ = 0;
}
inline ::google::protobuf::int32 Message_ConfigMessage::worker_num() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.worker_num)
  return worker_num_;
}
inline void Message_ConfigMessage::set_worker_num(::google::protobuf::int32 value) {
  
  worker_num_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.worker_num)
}

// int32 server_num = 2;
inline void Message_ConfigMessage::clear_server_num() {
  server_num_ = 0;
}
inline ::google::protobuf::int32 Message_ConfigMessage::server_num() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.server_num)
  return server_num_;
}
inline void Message_ConfigMessage::set_server_num(::google::protobuf::int32 value) {
  
  server_num_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.server_num)
}

// int32 key_range = 3;
inline void Message_ConfigMessage::clear_key_range() {
  key_range_ = 0;
}
inline ::google::protobuf::int32 Message_ConfigMessage::key_range() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.key_range)
  return key_range_;
}
inline void Message_ConfigMessage::set_key_range(::google::protobuf::int32 value) {
  
  key_range_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.key_range)
}

// repeated string node_ip_port = 4;
inline int Message_ConfigMessage::node_ip_port_size() const {
  return node_ip_port_.size();
}
inline void Message_ConfigMessage::clear_node_ip_port() {
  node_ip_port_.Clear();
}
inline const ::std::string& Message_ConfigMessage::node_ip_port(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.node_ip_port)
  return node_ip_port_.Get(index);
}
inline ::std::string* Message_ConfigMessage::mutable_node_ip_port(int index) {
  // @@protoc_insertion_point(field_mutable:rpscc.Message.ConfigMessage.node_ip_port)
  return node_ip_port_.Mutable(index);
}
inline void Message_ConfigMessage::set_node_ip_port(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.node_ip_port)
  node_ip_port_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void Message_ConfigMessage::set_node_ip_port(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.node_ip_port)
  node_ip_port_.Mutable(index)->assign(std::move(value));
}
#endif
inline void Message_ConfigMessage::set_node_ip_port(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  node_ip_port_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rpscc.Message.ConfigMessage.node_ip_port)
}
inline void Message_ConfigMessage::set_node_ip_port(int index, const char* value, size_t size) {
  node_ip_port_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpscc.Message.ConfigMessage.node_ip_port)
}
inline ::std::string* Message_ConfigMessage::add_node_ip_port() {
  // @@protoc_insertion_point(field_add_mutable:rpscc.Message.ConfigMessage.node_ip_port)
  return node_ip_port_.Add();
}
inline void Message_ConfigMessage::add_node_ip_port(const ::std::string& value) {
  node_ip_port_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.node_ip_port)
}
#if LANG_CXX11
inline void Message_ConfigMessage::add_node_ip_port(::std::string&& value) {
  node_ip_port_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.node_ip_port)
}
#endif
inline void Message_ConfigMessage::add_node_ip_port(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  node_ip_port_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rpscc.Message.ConfigMessage.node_ip_port)
}
inline void Message_ConfigMessage::add_node_ip_port(const char* value, size_t size) {
  node_ip_port_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rpscc.Message.ConfigMessage.node_ip_port)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
Message_ConfigMessage::node_ip_port() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.ConfigMessage.node_ip_port)
  return node_ip_port_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>*
Message_ConfigMessage::mutable_node_ip_port() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.ConfigMessage.node_ip_port)
  return &node_ip_port_;
}

// repeated int32 partition = 5;
inline int Message_ConfigMessage::partition_size() const {
  return partition_.size();
}
inline void Message_ConfigMessage::clear_partition() {
  partition_.Clear();
}
inline ::google::protobuf::int32 Message_ConfigMessage::partition(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.partition)
  return partition_.Get(index);
}
inline void Message_ConfigMessage::set_partition(int index, ::google::protobuf::int32 value) {
  partition_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.partition)
}
inline void Message_ConfigMessage::add_partition(::google::protobuf::int32 value) {
  partition_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.partition)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message_ConfigMessage::partition() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.ConfigMessage.partition)
  return partition_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message_ConfigMessage::mutable_partition() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.ConfigMessage.partition)
  return &partition_;
}

// repeated int32 server_id = 6;
inline int Message_ConfigMessage::server_id_size() const {
  return server_id_.size();
}
inline void Message_ConfigMessage::clear_server_id() {
  server_id_.Clear();
}
inline ::google::protobuf::int32 Message_ConfigMessage::server_id(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.server_id)
  return server_id_.Get(index);
}
inline void Message_ConfigMessage::set_server_id(int index, ::google::protobuf::int32 value) {
  server_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.server_id)
}
inline void Message_ConfigMessage::add_server_id(::google::protobuf::int32 value) {
  server_id_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.server_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message_ConfigMessage::server_id() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.ConfigMessage.server_id)
  return server_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message_ConfigMessage::mutable_server_id() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.ConfigMessage.server_id)
  return &server_id_;
}

// repeated int32 worker_id = 8;
inline int Message_ConfigMessage::worker_id_size() const {
  return worker_id_.size();
}
inline void Message_ConfigMessage::clear_worker_id() {
  worker_id_.Clear();
}
inline ::google::protobuf::int32 Message_ConfigMessage::worker_id(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.worker_id)
  return worker_id_.Get(index);
}
inline void Message_ConfigMessage::set_worker_id(int index, ::google::protobuf::int32 value) {
  worker_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.worker_id)
}
inline void Message_ConfigMessage::add_worker_id(::google::protobuf::int32 value) {
  worker_id_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.worker_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message_ConfigMessage::worker_id() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.ConfigMessage.worker_id)
  return worker_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message_ConfigMessage::mutable_worker_id() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.ConfigMessage.worker_id)
  return &worker_id_;
}

// repeated int32 master_id = 9;
inline int Message_ConfigMessage::master_id_size() const {
  return master_id_.size();
}
inline void Message_ConfigMessage::clear_master_id() {
  master_id_.Clear();
}
inline ::google::protobuf::int32 Message_ConfigMessage::master_id(int index) const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.master_id)
  return master_id_.Get(index);
}
inline void Message_ConfigMessage::set_master_id(int index, ::google::protobuf::int32 value) {
  master_id_.Set(index, value);
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.master_id)
}
inline void Message_ConfigMessage::add_master_id(::google::protobuf::int32 value) {
  master_id_.Add(value);
  // @@protoc_insertion_point(field_add:rpscc.Message.ConfigMessage.master_id)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Message_ConfigMessage::master_id() const {
  // @@protoc_insertion_point(field_list:rpscc.Message.ConfigMessage.master_id)
  return master_id_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Message_ConfigMessage::mutable_master_id() {
  // @@protoc_insertion_point(field_mutable_list:rpscc.Message.ConfigMessage.master_id)
  return &master_id_;
}

// int32 bound = 7;
inline void Message_ConfigMessage::clear_bound() {
  bound_ = 0;
}
inline ::google::protobuf::int32 Message_ConfigMessage::bound() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.ConfigMessage.bound)
  return bound_;
}
inline void Message_ConfigMessage::set_bound(::google::protobuf::int32 value) {
  
  bound_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.ConfigMessage.bound)
}

// -------------------------------------------------------------------

// Message_RegisterMessage

// string ip = 1;
inline void Message_RegisterMessage::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& Message_RegisterMessage::ip() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RegisterMessage.ip)
  return ip_.GetNoArena();
}
inline void Message_RegisterMessage::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:rpscc.Message.RegisterMessage.ip)
}
#if LANG_CXX11
inline void Message_RegisterMessage::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:rpscc.Message.RegisterMessage.ip)
}
#endif
inline void Message_RegisterMessage::set_ip(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:rpscc.Message.RegisterMessage.ip)
}
inline void Message_RegisterMessage::set_ip(const char* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:rpscc.Message.RegisterMessage.ip)
}
inline ::std::string* Message_RegisterMessage::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:rpscc.Message.RegisterMessage.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Message_RegisterMessage::release_ip() {
  // @@protoc_insertion_point(field_release:rpscc.Message.RegisterMessage.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Message_RegisterMessage::set_allocated_ip(::std::string* ip) {
  if (ip != nullptr) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:rpscc.Message.RegisterMessage.ip)
}

// int32 port = 2;
inline void Message_RegisterMessage::clear_port() {
  port_ = 0;
}
inline ::google::protobuf::int32 Message_RegisterMessage::port() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RegisterMessage.port)
  return port_;
}
inline void Message_RegisterMessage::set_port(::google::protobuf::int32 value) {
  
  port_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.RegisterMessage.port)
}

// bool is_server = 3;
inline void Message_RegisterMessage::clear_is_server() {
  is_server_ = false;
}
inline bool Message_RegisterMessage::is_server() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.RegisterMessage.is_server)
  return is_server_;
}
inline void Message_RegisterMessage::set_is_server(bool value) {
  
  is_server_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.RegisterMessage.is_server)
}

// -------------------------------------------------------------------

// Message_HeartbeatMessage

// bool is_live = 1;
inline void Message_HeartbeatMessage::clear_is_live() {
  is_live_ = false;
}
inline bool Message_HeartbeatMessage::is_live() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.HeartbeatMessage.is_live)
  return is_live_;
}
inline void Message_HeartbeatMessage::set_is_live(bool value) {
  
  is_live_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.HeartbeatMessage.is_live)
}

// int32 agent_epoch_num = 2;
inline void Message_HeartbeatMessage::clear_agent_epoch_num() {
  agent_epoch_num_ = 0;
}
inline ::google::protobuf::int32 Message_HeartbeatMessage::agent_epoch_num() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.HeartbeatMessage.agent_epoch_num)
  return agent_epoch_num_;
}
inline void Message_HeartbeatMessage::set_agent_epoch_num(::google::protobuf::int32 value) {
  
  agent_epoch_num_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.HeartbeatMessage.agent_epoch_num)
}

// -------------------------------------------------------------------

// Message

// int32 send_id = 1;
inline void Message::clear_send_id() {
  send_id_ = 0;
}
inline ::google::protobuf::int32 Message::send_id() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.send_id)
  return send_id_;
}
inline void Message::set_send_id(::google::protobuf::int32 value) {
  
  send_id_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.send_id)
}

// int32 recv_id = 2;
inline void Message::clear_recv_id() {
  recv_id_ = 0;
}
inline ::google::protobuf::int32 Message::recv_id() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.recv_id)
  return recv_id_;
}
inline void Message::set_recv_id(::google::protobuf::int32 value) {
  
  recv_id_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.recv_id)
}

// .rpscc.Message.MessageType message_type = 3;
inline void Message::clear_message_type() {
  message_type_ = 0;
}
inline ::rpscc::Message_MessageType Message::message_type() const {
  // @@protoc_insertion_point(field_get:rpscc.Message.message_type)
  return static_cast< ::rpscc::Message_MessageType >(message_type_);
}
inline void Message::set_message_type(::rpscc::Message_MessageType value) {
  
  message_type_ = value;
  // @@protoc_insertion_point(field_set:rpscc.Message.message_type)
}

// .rpscc.Message.ConfigMessage config_msg = 4;
inline bool Message::has_config_msg() const {
  return this != internal_default_instance() && config_msg_ != nullptr;
}
inline void Message::clear_config_msg() {
  if (GetArenaNoVirtual() == nullptr && config_msg_ != nullptr) {
    delete config_msg_;
  }
  config_msg_ = nullptr;
}
inline const ::rpscc::Message_ConfigMessage& Message::config_msg() const {
  const ::rpscc::Message_ConfigMessage* p = config_msg_;
  // @@protoc_insertion_point(field_get:rpscc.Message.config_msg)
  return p != nullptr ? *p : *reinterpret_cast<const ::rpscc::Message_ConfigMessage*>(
      &::rpscc::_Message_ConfigMessage_default_instance_);
}
inline ::rpscc::Message_ConfigMessage* Message::release_config_msg() {
  // @@protoc_insertion_point(field_release:rpscc.Message.config_msg)
  
  ::rpscc::Message_ConfigMessage* temp = config_msg_;
  config_msg_ = nullptr;
  return temp;
}
inline ::rpscc::Message_ConfigMessage* Message::mutable_config_msg() {
  
  if (config_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::rpscc::Message_ConfigMessage>(GetArenaNoVirtual());
    config_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpscc.Message.config_msg)
  return config_msg_;
}
inline void Message::set_allocated_config_msg(::rpscc::Message_ConfigMessage* config_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete config_msg_;
  }
  if (config_msg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      config_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config_msg, submessage_arena);
    }
    
  } else {
    
  }
  config_msg_ = config_msg;
  // @@protoc_insertion_point(field_set_allocated:rpscc.Message.config_msg)
}

// .rpscc.Message.RequestMessage request_msg = 5;
inline bool Message::has_request_msg() const {
  return this != internal_default_instance() && request_msg_ != nullptr;
}
inline void Message::clear_request_msg() {
  if (GetArenaNoVirtual() == nullptr && request_msg_ != nullptr) {
    delete request_msg_;
  }
  request_msg_ = nullptr;
}
inline const ::rpscc::Message_RequestMessage& Message::request_msg() const {
  const ::rpscc::Message_RequestMessage* p = request_msg_;
  // @@protoc_insertion_point(field_get:rpscc.Message.request_msg)
  return p != nullptr ? *p : *reinterpret_cast<const ::rpscc::Message_RequestMessage*>(
      &::rpscc::_Message_RequestMessage_default_instance_);
}
inline ::rpscc::Message_RequestMessage* Message::release_request_msg() {
  // @@protoc_insertion_point(field_release:rpscc.Message.request_msg)
  
  ::rpscc::Message_RequestMessage* temp = request_msg_;
  request_msg_ = nullptr;
  return temp;
}
inline ::rpscc::Message_RequestMessage* Message::mutable_request_msg() {
  
  if (request_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::rpscc::Message_RequestMessage>(GetArenaNoVirtual());
    request_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpscc.Message.request_msg)
  return request_msg_;
}
inline void Message::set_allocated_request_msg(::rpscc::Message_RequestMessage* request_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete request_msg_;
  }
  if (request_msg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      request_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, request_msg, submessage_arena);
    }
    
  } else {
    
  }
  request_msg_ = request_msg;
  // @@protoc_insertion_point(field_set_allocated:rpscc.Message.request_msg)
}

// .rpscc.Message.HeartbeatMessage heartbeat_msg = 6;
inline bool Message::has_heartbeat_msg() const {
  return this != internal_default_instance() && heartbeat_msg_ != nullptr;
}
inline void Message::clear_heartbeat_msg() {
  if (GetArenaNoVirtual() == nullptr && heartbeat_msg_ != nullptr) {
    delete heartbeat_msg_;
  }
  heartbeat_msg_ = nullptr;
}
inline const ::rpscc::Message_HeartbeatMessage& Message::heartbeat_msg() const {
  const ::rpscc::Message_HeartbeatMessage* p = heartbeat_msg_;
  // @@protoc_insertion_point(field_get:rpscc.Message.heartbeat_msg)
  return p != nullptr ? *p : *reinterpret_cast<const ::rpscc::Message_HeartbeatMessage*>(
      &::rpscc::_Message_HeartbeatMessage_default_instance_);
}
inline ::rpscc::Message_HeartbeatMessage* Message::release_heartbeat_msg() {
  // @@protoc_insertion_point(field_release:rpscc.Message.heartbeat_msg)
  
  ::rpscc::Message_HeartbeatMessage* temp = heartbeat_msg_;
  heartbeat_msg_ = nullptr;
  return temp;
}
inline ::rpscc::Message_HeartbeatMessage* Message::mutable_heartbeat_msg() {
  
  if (heartbeat_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::rpscc::Message_HeartbeatMessage>(GetArenaNoVirtual());
    heartbeat_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpscc.Message.heartbeat_msg)
  return heartbeat_msg_;
}
inline void Message::set_allocated_heartbeat_msg(::rpscc::Message_HeartbeatMessage* heartbeat_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete heartbeat_msg_;
  }
  if (heartbeat_msg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      heartbeat_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, heartbeat_msg, submessage_arena);
    }
    
  } else {
    
  }
  heartbeat_msg_ = heartbeat_msg;
  // @@protoc_insertion_point(field_set_allocated:rpscc.Message.heartbeat_msg)
}

// .rpscc.Message.RegisterMessage register_msg = 7;
inline bool Message::has_register_msg() const {
  return this != internal_default_instance() && register_msg_ != nullptr;
}
inline void Message::clear_register_msg() {
  if (GetArenaNoVirtual() == nullptr && register_msg_ != nullptr) {
    delete register_msg_;
  }
  register_msg_ = nullptr;
}
inline const ::rpscc::Message_RegisterMessage& Message::register_msg() const {
  const ::rpscc::Message_RegisterMessage* p = register_msg_;
  // @@protoc_insertion_point(field_get:rpscc.Message.register_msg)
  return p != nullptr ? *p : *reinterpret_cast<const ::rpscc::Message_RegisterMessage*>(
      &::rpscc::_Message_RegisterMessage_default_instance_);
}
inline ::rpscc::Message_RegisterMessage* Message::release_register_msg() {
  // @@protoc_insertion_point(field_release:rpscc.Message.register_msg)
  
  ::rpscc::Message_RegisterMessage* temp = register_msg_;
  register_msg_ = nullptr;
  return temp;
}
inline ::rpscc::Message_RegisterMessage* Message::mutable_register_msg() {
  
  if (register_msg_ == nullptr) {
    auto* p = CreateMaybeMessage<::rpscc::Message_RegisterMessage>(GetArenaNoVirtual());
    register_msg_ = p;
  }
  // @@protoc_insertion_point(field_mutable:rpscc.Message.register_msg)
  return register_msg_;
}
inline void Message::set_allocated_register_msg(::rpscc::Message_RegisterMessage* register_msg) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete register_msg_;
  }
  if (register_msg) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      register_msg = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, register_msg, submessage_arena);
    }
    
  } else {
    
  }
  register_msg_ = register_msg;
  // @@protoc_insertion_point(field_set_allocated:rpscc.Message.register_msg)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpscc

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rpscc::Message_RequestMessage_RequestType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpscc::Message_RequestMessage_RequestType>() {
  return ::rpscc::Message_RequestMessage_RequestType_descriptor();
}
template <> struct is_proto_enum< ::rpscc::Message_MessageType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpscc::Message_MessageType>() {
  return ::rpscc::Message_MessageType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_message_2eproto
